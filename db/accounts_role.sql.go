// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: accounts_role.sql

package db

import (
	"context"
)

const roleCreate = `-- name: RoleCreate :one
select  
	role_id ,
	role_name ,
	role_description ,
	created_at ,
	updated_at ,
	deleted_at from accounts_schema.role_create(

in_role_name => $1,
in_role_description => $2,
in_permissions => $3::int[]
)
`

type RoleCreateParams struct {
	RoleName        string  `json:"role_name"`
	RoleDescription string  `json:"role_description"`
	Permissions     []int32 `json:"permissions"`
}

func (q *Queries) RoleCreate(ctx context.Context, arg RoleCreateParams) (AccountsSchemaRole, error) {
	row := q.db.QueryRow(ctx, roleCreate, arg.RoleName, arg.RoleDescription, arg.Permissions)
	var i AccountsSchemaRole
	err := row.Scan(
		&i.RoleID,
		&i.RoleName,
		&i.RoleDescription,
		&i.CreatedAt,
		&i.UpdatedAt,
		&i.DeletedAt,
	)
	return i, err
}
